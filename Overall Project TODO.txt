##in LibraryDB.java
	3. rewrite createDB() as:
		Also it does not save settings for connecting to the new db in config file.
		Also it only creates the database and doesn't run install.sql script to initilze tables.

#Database changes
	2. implement search functions for keyword, title, and author (maybe genre search as well)
	
	
	

##Book.java
1. Decide if we want to do something special for author aliases
2. add comment/review stream field to this structure later.
3. potentially overload constructor so personal fields can be set with a single call.

UserController.java
1. add additional constraints to user creation to ensure better consnistency.


##BookDao.java (skeleton functions at this time)
1. (IMPORTANT) Take sql query functions from LibraryDB.java and inject them into this file.


##UserDao.java 



#######
(IMPORTANT) Create Genre inheritance tree and create SQL script to automatically generate them from our existing genre-types (like our install sql script)

1.(IMPORTANT) createMockDB for testing instead of using real DB	as currently our tests would wipe out entries in the database if they are not created by our init script.



##project size tasks
1. Create Scraper to recursively scan our file directory and extract required metadata from the epub .opf file as well as extracting cover image for our view of the book.
2. Make a tool to create/locate a a nested file directory structure for the cover images in our database system.
3. Create QTJambi interface to allow GUI access to the library_database project in an app form
4. create Spark app interface to allow access to system via webpages.

